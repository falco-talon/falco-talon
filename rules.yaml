- action: Terminate Pod
  actionner: kubernetes:terminate

- action: Disable outbound connections
  actionner: kubernetes:networkpolicy
  parameters:
    allow:
      - "192.168.1.0/24"
      - "172.17.0.0/16"

- action: Label Pod as Suspicious
  description: "Add the label suspicious=true"
  actionner: kubernetes:label
  parameters:
    labels:
      suspicious: "true"

- action: Invoke Lambda function
  actionner: aws:lambda
  parameters:
    aws_lambda_name: sample-function
    aws_lambda_alias_or_version: $LATEST
    aws_lambda_invocation_type: RequestResponse

- rule: Suspicious outbound connection
  description: "Label pods with suspicious outbound connections if not in the kube-system"
  match:
    rules:
      - Unexpected outbound connection destination
    output_fields:
      - k8s.ns.name!=kube-system
  actions:
    - action: Label Pod as Suspicious

- rule: Terminal shell in container
  description: >
    Label the pod outside kube-system and falco namespaces if a shell is started inside
  match:
    rules:
      - Terminal shell in container
    output_fields:
      - k8s.ns.name!=kube-system, k8s.ns.name!=falco
  actions:
    - action: Label Pod as Suspicious

# - rule: Test invoke lambda
#   match:
#     rules:
#       - Test invoke lambda
#   actions:
#     - action: Invoke Lambda function

# - rule: Delete unknown namespace
#   match:
#     rules:
#       - K8s Namespace Created
#     output_fields:
#       - ka.target.namespace=todelete
#   actions:
#       - action: Delete the namespace
#         actionner: kubernetes:delete
  
- rule: Calico netpol 
  match:
    rules:
      - Unexpected outbound connection destination
    output_fields:
      - k8s.ns.name!=kube-system
  actions:
    - action: Disable outbound connections
      parameters:
        allow_cidr:
          - "192.168.1.0/24"
          - "172.17.0.0/16"
        allow_namespaces:
          - "green-ns"
          - "blue-ns"
    # - action: Create Calico netpol
    #   actionner: calico:networkpolicy
    #   parameters:
    #     order: 20
    #     allow_cidr:
    #       - "192.168.2.0/24"
    #     allow_namespaces:
    #       - "green-ns"
  
- rule: Delete namespace 
  match:
    rules:
      - Test delete namespace
    output_fields:
      - ka.target.name=todelete
  actions:
    - action: Delete the resource
      actionner: kubernetes:delete

- rule: Test exec
  match:
    rules:
      - Test exec
    output_fields:
      - k8s.ns.name!=kube-system
  actions:
    - action: Test exec
      actionner: kubernetes:exec
      additional_contexts:
        - k8snode
      parameters:
        command: echo "${NODE_HOSTNAME}"